if ("${CMAKE_MINIMUM_REQUIRED_VERSION}" STREQUAL "")
    cmake_minimum_required(VERSION 3.25)
endif ()
project(ch03_PrimaryGrammar)

#add_subdirectory(0302_if_cost)
#add_subdirectory(0303_if_variable_string)
#add_subdirectory(0304_if_logical)
#add_subdirectory(0305_if_regex)
#add_subdirectory(0306_cache)
#add_subdirectory(0307_variableAndCache)
#add_subdirectory(0308_GuiAndCache)
#add_subdirectory(0309_option)
#add_subdirectory(0310_OverridePolicy)
#add_subdirectory(0311_PassCache)
#add_subdirectory(0313_SetAndGetProperty)
#add_subdirectory(0314_define_property)
#add_subdirectory(0315_FilePropertyAndDefine)
#add_subdirectory(0316_SetTargetProperty_mutilDefine)
#add_subdirectory(0317_property_print)
#add_subdirectory(0318_ENV)
#add_subdirectory(0319_math)
#add_subdirectory(0320_string)
#add_subdirectory(0321_string_append_replace_regex)
#add_subdirectory(0322_string_json)
#add_subdirectory(0323_list_append_get_Concatenate)
#add_subdirectory(0324_list_subarr_crud)
#add_subdirectory(0325_dequeue_sort)
#add_subdirectory(0326_foreach_RANGE)
#add_subdirectory(0327_foreach_list_break)
#add_subdirectory(0328_while)
#add_subdirectory(0330_macro)
#add_subdirectory(0331_marco_property)
#add_subdirectory(0332_function)
#add_subdirectory(0333_function_variable)
